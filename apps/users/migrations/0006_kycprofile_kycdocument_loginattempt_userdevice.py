# Generated by Django 5.2.7 on 2025-10-21 18:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_otp'),
    ]

    operations = [
        migrations.CreateModel(
            name='KYCProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, help_text='Required for age verification', null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('country_of_residence', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(max_length=20)),
                ('verification_level', models.IntegerField(choices=[(0, 'Unverified'), (1, 'Basic Verification'), (2, 'Identity Verified'), (3, 'Enhanced Verification')], default=0)),
                ('is_politically_exposed', models.BooleanField(default=False, help_text='Whether the user is a politically exposed person')),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('source_of_funds', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KYC Profile',
                'verbose_name_plural': 'KYC Profiles',
            },
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('national_id', 'National ID Card'), ('passport', 'Passport'), ('drivers_license', "Driver's License"), ('utility_bill', 'Utility Bill'), ('bank_statement', 'Bank Statement')], max_length=20)),
                ('document_number', models.CharField(help_text='Document ID or reference number', max_length=50)),
                ('front_image', models.ImageField(help_text='Front side of the document', upload_to='kyc_documents/%Y/%m/')),
                ('back_image', models.ImageField(blank=True, help_text='Back side of the document', null=True, upload_to='kyc_documents/%Y/%m/')),
                ('selfie_image', models.ImageField(blank=True, help_text='Selfie with document', null=True, upload_to='kyc_documents/%Y/%m/')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection if status is rejected', null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='users_kycdo_user_id_1e6b9d_idx'), models.Index(fields=['document_type', 'status'], name='users_kycdo_documen_69e52a_idx')],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('device_id', models.CharField(blank=True, max_length=64, null=True)),
                ('user_agent', models.TextField()),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('blocked', 'Blocked')], max_length=20)),
                ('failure_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['ip_address', 'attempted_at'], name='users_login_ip_addr_bed342_idx'), models.Index(fields=['user', 'attempted_at'], name='users_login_user_id_1b5238_idx'), models.Index(fields=['device_id', 'attempted_at'], name='users_login_device__1a3524_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(help_text='Unique device identifier', max_length=64)),
                ('device_type', models.CharField(help_text='Type of device (mobile, desktop, tablet)', max_length=20)),
                ('device_name', models.CharField(help_text='User-friendly device name', max_length=100)),
                ('os_type', models.CharField(help_text='Operating system', max_length=20)),
                ('os_version', models.CharField(help_text='OS version', max_length=20)),
                ('browser', models.CharField(help_text='Browser name and version', max_length=50)),
                ('ip_address', models.GenericIPAddressField()),
                ('location', models.CharField(blank=True, help_text='Geographic location based on IP', max_length=100, null=True)),
                ('is_trusted', models.BooleanField(default=False)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'is_trusted'], name='users_userd_user_id_633d7e_idx'), models.Index(fields=['device_id'], name='users_userd_device__c17433_idx')],
                'unique_together': {('user', 'device_id')},
            },
        ),
    ]
